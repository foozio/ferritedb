name: Feature Request
description: Suggest an idea for RustBase
title: "[Feature]: "
labels: ["enhancement", "triage"]
assignees: []

body:
  - type: markdown
    attributes:
      value: |
        Thanks for suggesting a new feature! Please provide as much detail as possible to help us understand your use case and evaluate the request.

  - type: textarea
    id: problem
    attributes:
      label: Problem Statement
      description: Is your feature request related to a problem? Please describe the problem you're trying to solve.
      placeholder: "I'm always frustrated when..."
    validations:
      required: true

  - type: textarea
    id: solution
    attributes:
      label: Proposed Solution
      description: Describe the solution you'd like to see implemented.
      placeholder: "I would like RustBase to..."
    validations:
      required: true

  - type: textarea
    id: alternatives
    attributes:
      label: Alternatives Considered
      description: Describe any alternative solutions or features you've considered.
      placeholder: "I've also considered..."

  - type: dropdown
    id: priority
    attributes:
      label: Priority
      description: How important is this feature to you?
      options:
        - Low - Nice to have
        - Medium - Would improve my workflow
        - High - Blocking my use case
        - Critical - Cannot use RustBase without this
    validations:
      required: true

  - type: dropdown
    id: complexity
    attributes:
      label: Estimated Complexity
      description: How complex do you think this feature would be to implement?
      options:
        - Low - Simple configuration or API change
        - Medium - New functionality but straightforward
        - High - Significant new feature or architectural change
        - Unknown - Not sure about implementation complexity

  - type: textarea
    id: use_case
    attributes:
      label: Use Case
      description: Describe your specific use case and how this feature would help.
      placeholder: |
        I'm building an application that needs to...
        This feature would help by...
    validations:
      required: true

  - type: textarea
    id: examples
    attributes:
      label: Examples
      description: Provide examples of how this feature would work (API calls, configuration, etc.)
      render: shell
      placeholder: |
        # Example API usage
        POST /api/collections/users/records
        {
          "name": "John Doe",
          "new_field": "example_value"
        }

  - type: textarea
    id: references
    attributes:
      label: References
      description: Any references to similar features in other tools, documentation, or discussions?
      placeholder: |
        - Similar feature in PocketBase: https://...
        - Related discussion: https://...
        - Documentation: https://...

  - type: checkboxes
    id: contribution
    attributes:
      label: Contribution
      description: Are you willing to contribute to this feature?
      options:
        - label: I would be willing to implement this feature
        - label: I would be willing to help test this feature
        - label: I would be willing to help with documentation

  - type: checkboxes
    id: checklist
    attributes:
      label: Checklist
      description: Please confirm the following
      options:
        - label: I have searched existing issues to ensure this is not a duplicate
          required: true
        - label: I have considered if this could be implemented as a plugin or external tool
          required: true
        - label: This feature aligns with RustBase's goals as a backend-as-a-service solution
          required: true